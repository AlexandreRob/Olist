# Generated by Django 4.2 on 2023-04-07 05:09

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='City',
            fields=[
                ('city_id', models.IntegerField(primary_key=True, serialize=False)),
                ('city_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'city',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('customer_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'customer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('location_id', models.IntegerField(primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'location',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Orders',
            fields=[
                ('order_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('order_status', models.CharField(blank=True, max_length=50, null=True)),
                ('order_purchase_timestamp', models.DateField(blank=True, null=True)),
                ('order_approved_at', models.DateField(blank=True, null=True)),
                ('order_delivered_carrier_date', models.DateField(blank=True, null=True)),
                ('order_delivered_customer_date', models.DateField(blank=True, null=True)),
                ('order_estimated_delivery_date', models.DateField(blank=True, null=True)),
                ('shipping_limit_date', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'orders',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('payment_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('payment_sequential', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_type', models.CharField(blank=True, max_length=50, null=True)),
                ('payment_installments', models.IntegerField(blank=True, null=True)),
                ('payment_value', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'payment',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('product_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('product_category_name', models.CharField(blank=True, max_length=50, null=True)),
                ('product_name_lenght', models.IntegerField(blank=True, null=True)),
                ('product_description_lenght', models.IntegerField(blank=True, null=True)),
                ('product_photos_qty', models.IntegerField(blank=True, null=True)),
                ('product_length_cm', models.IntegerField(blank=True, null=True)),
                ('product_height_cm', models.IntegerField(blank=True, null=True)),
                ('product_width_cm', models.IntegerField(blank=True, null=True)),
                ('product_weight_g', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'product',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('review_score', models.IntegerField(blank=True, null=True)),
                ('review_comment_title', models.CharField(blank=True, max_length=50, null=True)),
                ('review_comment_message', models.CharField(blank=True, max_length=50, null=True)),
                ('review_creation_date', models.DateField(blank=True, null=True)),
                ('review_answer_timestamp', models.DateField(blank=True, null=True)),
            ],
            options={
                'db_table': 'review',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Seller',
            fields=[
                ('seller_id', models.CharField(max_length=50, primary_key=True, serialize=False)),
            ],
            options={
                'db_table': 'seller',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('state_id', models.IntegerField(primary_key=True, serialize=False)),
                ('state_name', models.CharField(blank=True, max_length=50, null=True)),
            ],
            options={
                'db_table': 'state',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ZipCode',
            fields=[
                ('zip_code_id', models.IntegerField(primary_key=True, serialize=False)),
                ('zip_code_name', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'zip_code',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DetailOrder',
            fields=[
                ('order', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='api.orders')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('freight_value', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('quantity', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'detail_order',
                'managed': False,
            },
        ),
    ]
